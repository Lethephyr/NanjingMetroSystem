import math


nanjing_metro_stations = {
    # 1号线
    "八卦洲大桥南": 1
}

cnt = 1

dis = [[2147483647 for i in range(209)] for j in range(209)]
for i in range(1, 209):
    dis[i][i] = 0

def add_station(station_name):
    global cnt
    # 检查站点是否已存在
    existing_key = nanjing_metro_stations.get(station_name)
    cnt = cnt + 1
    # print(f"{cnt}: \"{station_name}\",", end="")
    if existing_key is not None:
        # print(f"{station_name}(key={existing_key}）已存在，无需添加。")
        dis[existing_key][cnt] = dis[cnt][existing_key] = 0
        print(existing_key, cnt)
    else:
        # 添加新站点
        new_key = max(nanjing_metro_stations.values()) + 1
        nanjing_metro_stations[station_name] = cnt
        # print(f"已添加新站点：{station_name},分配的key为,{new_key}")

# 1

add_station("笆斗山")
add_station("燕子矶")
add_station("吉祥庵")
add_station("晓庄")
add_station("迈皋桥")
add_station("红山动物园")
add_station("南京站")
add_station("新模范马路")
add_station("玄武门")
add_station("鼓楼")
add_station("珠江路")
add_station("新街口")
add_station("张府园")
add_station("三山街")
add_station("中华门")
add_station("安德门")
add_station("天隆寺")
add_station("软件大道")
add_station("花神庙")
add_station("南京南站")
add_station("双龙大道")
add_station("河定桥")
add_station("胜太路")
add_station("百家湖")
add_station("小龙湾")
add_station("竹山路")
add_station("天印大道")
add_station("龙眠大道")
add_station("南医大·江苏经贸学院")
add_station("南京交院")
add_station("中国药科大学")

# 2

add_station("鱼嘴")
add_station("天保街")
add_station("青莲街")
add_station("螺塘路")
add_station("油坊桥")
add_station("雨润大街")
add_station("元通")
add_station("奥体东")
add_station("兴隆大街")
add_station("集庆门大街")
add_station("云锦路")
add_station("莫愁湖")
add_station("汉中门")
add_station("上海路")
add_station("新街口")
add_station("大行宫")
add_station("西安门")
add_station("明故宫")
add_station("苜蓿园")
add_station("下马坊")
add_station("孝陵卫")
add_station("钟灵街")
add_station("马群")
add_station("金马路")
add_station("仙鹤门")
add_station("学则路")
add_station("仙林中心")
add_station("羊山公园")
add_station("南大仙林校区")
add_station("经天路")

# 3 

add_station("林场")
add_station("星火路")
add_station("东大成贤学院")
add_station("泰冯路")
add_station("天润城")
add_station("柳洲东路")
add_station("上元门")
add_station("五塘广场")
add_station("小市")
add_station("南京站")
add_station("南京林业大学·新庄")
add_station("鸡鸣寺")
add_station("浮桥")
add_station("大行宫")
add_station("常府街")
add_station("夫子庙")
add_station("武定门")
add_station("雨花门")
add_station("卡子门")
add_station("大明路")
add_station("明发广场")
add_station("南京南站")
add_station("宏运大道")
add_station("胜太西路")
add_station("天元西路")
add_station("九龙湖")
add_station("诚信大道")
add_station("东大九龙湖校区")
add_station("秣周东路")

# 4

add_station("仙林湖")
add_station("西岗桦墅")
add_station("孟北")
add_station("东流")
add_station("灵山")
add_station("汇通路")
add_station("金马路")
add_station("苏宁总部·徐庄")
add_station("聚宝山")
add_station("王家湾")
add_station("蒋王庙")
add_station("岗子村")
add_station("九华山")
add_station("鸡鸣寺")
add_station("鼓楼")
add_station("云南路")
add_station("草场门·南艺·二师")
add_station("龙江")

# 7


add_station("仙新路")
add_station("尧化门")
add_station("尧化新村")
add_station("丁家庄南")
add_station("丁家庄")
add_station("万寿")
add_station("晓庄")
add_station("幕府山")
add_station("五塘广场")
add_station("幕府西路")

# 10

add_station("雨山路")
add_station("文德路")
add_station("龙华路")
add_station("南京工业大学")
add_station("浦口万汇城")
add_station("临江·青奥体育公园")
add_station("江心洲")
add_station("绿博园")
add_station("梦都大街")
add_station("奥体中心")
add_station("元通")
add_station("中胜")
add_station("小行")
add_station("安德门")

# s1

add_station("空港新城江宁")
add_station("禄口机场")
add_station("翔宇路南")
add_station("翔宇路北")
add_station("正方中路")
add_station("吉印大道")
add_station("河海大学·佛城西路")
add_station("翠屏山")
add_station("南京南站")

# s3

add_station("南京南站")
add_station("景明佳园")
add_station("铁心桥")
add_station("春江路")
add_station("贾西")
add_station("油坊桥")
add_station("永初路")
add_station("平良大街")
add_station("吴侯街")
add_station("高庙路")
add_station("天保")
add_station("刘村")
add_station("马骡圩")
add_station("兰花塘")
add_station("双垅")
add_station("石碛河")
add_station("桥林新城")
add_station("林山")
add_station("高家冲")

# s6

add_station("马群")
add_station("白水桥")
add_station("麒麟门")
add_station("东郊小镇")
add_station("古泉")
add_station("南京猿人洞")
add_station("汤山")
add_station("泉都大街")
add_station("黄梅")
add_station("童世界")
add_station("华阳")
add_station("崇明")
add_station("句容")

# s7

add_station("空港新城江宁")
add_station("柘塘")
add_station("空港新城溧水")
add_station("群力")
add_station("卧龙湖")
add_station("溧水")
add_station("中山湖")
add_station("幸庄")
add_station("无想山")

#s8

add_station("长江大桥北")
add_station("毛纺厂路")
add_station("泰山新村")
add_station("泰冯路")
add_station("高新开发区")
add_station("信息工程大学")
add_station("卸甲甸")
add_station("大厂")
add_station("葛塘")
add_station("长芦")
add_station("化工园")
add_station("六和开发区")
add_station("龙池")
add_station("雄州")
add_station("凤凰山公园")
add_station("方州广场")
add_station("沈桥")
add_station("八百桥")
add_station("金牛湖")

# s9

add_station("翔宇路南")
add_station("铜山")
add_station("石湫")
add_station("明觉")
add_station("团结圩")
add_station("高淳")


# print(nanjing_metro_stations)


# 1

dis[1][2] = dis[2][1] = 1370
dis[2][3] = dis[3][2] = 1292
dis[3][4] = dis[4][3] = 1115
dis[4][5] = dis[5][4] = 1007
dis[5][6] = dis[6][5] = 1910
dis[6][7] = dis[7][6] = 1142
dis[7][8] = dis[8][7] = 1121
dis[8][9] = dis[9][8] = 1691
dis[9][10] = dis[10][9] = 1061
dis[10][11] = dis[11][10] = 1254
dis[11][12] = dis[12][11] = 862
dis[12][13] = dis[13][12] = 1147
dis[13][14] = dis[14][13] = 1125
dis[14][15] = dis[15][14] = 909
dis[15][16] = dis[16][15] = 1914
dis[16][17] = dis[17][16] = 2093
dis[17][18] = dis[18][17] = 1455
dis[18][19] = dis[19][18] = 1283
dis[19][20] = dis[20][19] = 1076
dis[20][21] = dis[21][20] = 1853
dis[21][22] = dis[22][21] = 2276
dis[22][23] = dis[23][22] = 1345
dis[23][24] = dis[24][23] = 904
dis[24][25] = dis[25][24] = 1332
dis[25][26] = dis[26][25] = 1475
dis[26][27] = dis[27][26] = 1135
dis[27][28] = dis[28][27] = 1919
dis[28][29] = dis[29][28] = 1312
dis[29][30] = dis[30][29] = 1550
dis[30][31] = dis[31][30] = 2720
dis[31][32] = dis[32][31] = 1964

# 2 

dis[33][34] = dis[34][33] = 866
dis[34][35] = dis[35][34] = 1274
dis[35][36] = dis[36][35] = 910
dis[36][37] = dis[37][36] = 2324
dis[37][38] = dis[38][37] = 2631
dis[38][39] = dis[39][38] = 1622
dis[39][40] = dis[40][39] = 1262
dis[40][41] = dis[41][40] = 1379
dis[41][42] = dis[42][41] = 1473
dis[42][43] = dis[43][42] = 1312
dis[43][44] = dis[44][43] = 1257
dis[44][45] = dis[45][44] = 1002
dis[45][46] = dis[46][45] = 874
dis[46][47] = dis[47][46] = 745
dis[47][48] = dis[48][47] = 1022
dis[48][49] = dis[49][48] = 1024
dis[49][50] = dis[50][49] = 1300
dis[50][51] = dis[51][50] = 1521
dis[51][52] = dis[52][51] = 1307
dis[52][53] = dis[53][52] = 937
dis[53][54] = dis[54][53] = 1168
dis[54][55] = dis[55][54] = 2779
dis[55][56] = dis[56][55] = 3015
dis[56][57] = dis[57][56] = 1675
dis[57][58] = dis[58][57] = 1326
dis[58][59] = dis[59][58] = 1519
dis[59][60] = dis[60][59] = 1066
dis[60][61] = dis[61][60] = 1947
dis[61][62] = dis[62][61] = 1846

# 3

dis[63][64] = dis[64][63] = 2537
dis[64][65] = dis[65][64] = 1049
dis[65][66] = dis[66][65] = 1127
dis[66][67] = dis[67][66] = 1407
dis[67][68] = dis[68][67] = 1854
dis[68][69] = dis[69][68] = 3535
dis[69][70] = dis[70][69] = 961
dis[70][71] = dis[71][70] = 1845
dis[71][72] = dis[72][71] = 1379
dis[72][73] = dis[73][72] = 2017
dis[73][74] = dis[74][73] = 2851
dis[74][75] = dis[75][74] = 858
dis[75][76] = dis[76][75] = 859
dis[76][77] = dis[77][76] = 931
dis[77][78] = dis[78][77] = 1067
dis[78][79] = dis[79][78] = 1308
dis[79][80] = dis[80][79] = 1143
dis[80][81] = dis[81][80] = 977
dis[81][82] = dis[82][81] = 1153
dis[82][83] = dis[83][82] = 1137
dis[83][84] = dis[84][83] = 1222
dis[84][85] = dis[85][84] = 1105
dis[85][86] = dis[86][85] = 1826
dis[86][87] = dis[87][86] = 1791
dis[87][88] = dis[88][87] = 2343
dis[88][89] = dis[89][88] = 1526
dis[89][90] = dis[90][89] = 1301
dis[90][91] = dis[91][90] = 2995

# 4

dis[92][93] = dis[93][92] = 1574
dis[93][94] = dis[94][93] = 1828
dis[94][95] = dis[95][94] = 821
dis[95][96] = dis[96][95] = 1359
dis[96][97] = dis[97][96] = 807
dis[97][98] = dis[98][97] = 1391
dis[98][99] = dis[99][98] = 2018
dis[99][100] = dis[100][99] = 1128
dis[100][101] = dis[101][100] = 2749
dis[101][102] = dis[102][101] = 2569
dis[102][103] = dis[103][102] = 2564
dis[103][104] = dis[104][103] = 3233
dis[104][105] = dis[105][104] = 1187
dis[105][106] = dis[106][105] = 1938
dis[106][107] = dis[107][106] = 2454
dis[107][108] = dis[108][107] = 2185
dis[108][109] = dis[109][108] = 3212

# 7

dis[110][111] = dis[111][110] = 834
dis[111][112] = dis[112][111] = 1402
dis[112][113] = dis[113][112] = 1765
dis[113][114] = dis[114][113] = 1230
dis[114][115] = dis[115][114] = 2002
dis[115][116] = dis[116][115] = 1405
dis[116][117] = dis[117][116] = 1996
dis[117][118] = dis[118][117] = 2048
dis[118][119] = dis[119][118] = 821

# 10

dis[120][121] = dis[121][120] = 2157
dis[121][122] = dis[122][121] = 1307
dis[122][123] = dis[123][122] = 1400
dis[123][124] = dis[124][123] = 1865
dis[124][125] = dis[125][124] = 848
dis[125][126] = dis[126][125] = 1512
dis[126][127] = dis[127][126] = 1350
dis[127][128] = dis[128][127] = 4545
dis[128][129] = dis[129][128] = 833
dis[129][130] = dis[130][129] = 1134
dis[130][131] = dis[131][130] = 1427
dis[131][132] = dis[132][131] = 1154
dis[132][133] = dis[133][132] = 1729

# s1

dis[134][135] = dis[135][134] = 962
dis[135][136] = dis[136][135] = 7926
dis[136][137] = dis[137][136] = 4234
dis[137][138] = dis[138][137] = 7283
dis[138][139] = dis[139][138] = 4723
dis[139][140] = dis[140][139] = 3242
dis[140][141] = dis[141][140] = 3252
dis[141][142] = dis[142][141] = 4077

# s3

dis[143][144] = dis[144][143] = 1963
dis[144][145] = dis[145][144] = 1470
dis[145][146] = dis[146][145] = 1507
dis[146][147] = dis[147][146] = 1446
dis[147][148] = dis[148][147] = 1608
dis[148][149] = dis[149][148] = 1187
dis[149][150] = dis[150][149] = 1154
dis[150][151] = dis[151][150] = 949
dis[151][152] = dis[152][151] = 1037
dis[152][153] = dis[153][152] = 2007
dis[153][154] = dis[154][153] = 1525
dis[154][155] = dis[155][154] = 9844
dis[155][156] = dis[156][155] = 2099
dis[156][157] = dis[157][156] = 1324
dis[157][158] = dis[158][157] = 1471
dis[158][159] = dis[159][158] = 1350
dis[159][160] = dis[160][159] = 1998
dis[160][161] = dis[161][160] = 1712

# s6

dis[162][163] = dis[163][162] = 1977
dis[163][164] = dis[164][163] = 1286
dis[164][165] = dis[165][164] = 2439
dis[165][166] = dis[166][165] = 5498
dis[166][167] = dis[167][166] = 4434
dis[167][168] = dis[168][167] = 2734
dis[168][169] = dis[169][168] = 2202
dis[169][170] = dis[170][169] = 7414
dis[170][171] = dis[171][170] = 5433
dis[171][172] = dis[172][171] = 3586
dis[172][173] = dis[173][172] = 3319
dis[173][174] = dis[174][173] = 2570

# s7

dis[175][176] = dis[176][175] = 5486
dis[176][177] = dis[177][176] = 5502
dis[177][178] = dis[178][177] = 3138
dis[178][179] = dis[179][178] = 5236
dis[179][180] = dis[180][179] = 2423
dis[180][181] = dis[181][180] = 1529
dis[181][182] = dis[182][181] = 2261
dis[182][183] = dis[183][182] = 1229

# s8

dis[184][185] = dis[185][184] = 814
dis[185][186] = dis[186][185] = 1473
dis[186][187] = dis[187][186] = 1236
dis[187][188] = dis[188][187] = 2741
dis[188][189] = dis[189][188] = 2830
dis[189][190] = dis[190][189] = 1401
dis[190][191] = dis[191][190] = 1829
dis[191][192] = dis[192][191] = 2151
dis[192][193] = dis[193][192] = 3880
dis[193][194] = dis[194][193] = 1567
dis[194][195] = dis[195][194] = 2893
dis[195][196] = dis[196][195] = 2077
dis[196][197] = dis[197][196] = 2375
dis[197][198] = dis[198][197] = 1606
dis[198][199] = dis[199][198] = 1475
dis[199][200] = dis[200][199] = 6112
dis[200][201] = dis[201][200] = 4971
dis[201][202] = dis[202][201] = 5475

# s9

dis[203][204] = dis[204][203] = 10003
dis[204][205] = dis[205][204] = 7374
dis[205][206] = dis[206][205] = 11219
dis[206][207] = dis[207][206] = 16912
dis[207][208] = dis[208][207] = 6232

for k in range(209):
    for i in range(209):
        for j in range(209):
            if dis[i][j] > dis[i][k] + dis[k][j]:
                dis[i][j] = dis[i][k] + dis[k][j]
                # print(f"{i},{j},{k},{dis[i][j]}")

# 计算两地间地铁票价
def solve_price(distance):
    # distance / 1000 四舍五入
    distance =  distance // 1000
    if distance <= 0:
        return 0
    elif 0 < distance <= 4:
        return 2
    elif 4 < distance <= 9:
        return 3
    elif 9 < distance <= 14:
        return 4
    elif 14 < distance <= 21:
        return 5
    elif 21 < distance <= 28:
        return 6
    elif 28 < distance <= 37:
        return 7
    elif 37 < distance <= 48:
        return 8
    elif 48 < distance <= 61:
        return 9
    elif 61 < distance:
        # 每15公里增加1元,向上取整
        return 9 + math.ceil((distance - 61) / 15)

price = [[143171 for i in range(209)] for j in range(209)]

for i in range(0, 209):
    for j in range(0, 209):
        price[i][j] = solve_price(dis[i][j])
num = 0

price[73][43] = 4

for i in range(0, 209):
    for j in range(0, 209):
        if price[i][j] == 143171:
            price[i][j] = 0
        else:
            num = num+1    
        print(price[i][j], end=", ")

print(price[1][93])

# for i in range(92,109):
#     print(f"\"{i}\": {dis[109][i]-dis[109][i-1]},")
